package com.vets.vets;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author John
 */
public class Menu extends javax.swing.JFrame {
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvar = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        lbNome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtLink = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbTema = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblFaltam = new javax.swing.JLabel();
        lblTamanho = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lbNome.setText("Nome:");

        jLabel1.setText("Link:");

        jLabel2.setText("Tema:");

        cbTema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Informatica", "Times" }));
        cbTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTemaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtLink, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cbTema, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(lblFaltam)
                        .addGap(6, 6, 6)
                        .addComponent(lblTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(cbTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFaltam)
                    .addComponent(lblTamanho))
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
         String nome = txtNome.getText();
         String link = txtLink.getText();
         String temaSelecionado = cbTema.getSelectedItem().toString();
         if (!nome.equals("") && !nome.equals("") && !temaSelecionado.equals("Nenhum")){
             apagarUltima(temaSelecionado);
             adicionar(nome, link, temaSelecionado);
             excluir(nome.toUpperCase(), temaSelecionado);
             limpar();
             exibir(temaSelecionado);
         }
         
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cbTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTemaActionPerformed
        String temaSelecionado = cbTema.getSelectedItem().toString();
        if (!temaSelecionado.equals("Nenhum")){
            limpar();
            exibir(temaSelecionado);
         }else{
            limpar();
        }
    }//GEN-LAST:event_cbTemaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    
    
public void adicionar(String nome, String link, String tema){
    try{
                    FileWriter salvar = new FileWriter(tema+"_Script.ahk",true);
                    salvar.write("	if InStr(Clipboard, \""+link+"\")");
                    salvar.write(System.getProperty("line.separator"));
                    salvar.write("    {");
                    salvar.write(System.getProperty("line.separator"));
                    salvar.write("        Send, "+nome+"{enter}");
                    salvar.write(System.getProperty("line.separator"));
                    salvar.write("    return");
                    salvar.write(System.getProperty("line.separator"));
                    salvar.write("    }");
                    salvar.write(System.getProperty("line.separator"));
                    salvar.write("}");
                    salvar.close();
                    txtNome.setText("");
                    txtLink.setText("");
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Não foi salvo com sucesso");
                }
}
public void apagarUltima(String caminho){
    try (RandomAccessFile raf = new RandomAccessFile(caminho+"_Script.ahk", "rw")) {
            long fileLength = raf.length();
            if (fileLength == 0) {
                // File is empty, nothing to delete
                return;
            }

            // Start searching for the last newline character from the end of the file
            long position = fileLength - 1;
            raf.seek(position);

            int lastByte;
            while ((lastByte = raf.read()) != -1) {
                if (lastByte == '\n') {
                    // Found the last newline character
                    break;
                }
                position--;
                raf.seek(position);
            }

            // Truncate the file at the position of the last newline character
            raf.setLength(position);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "NUM CUNSEGUI EXCLUIR A LINHA");
        }
}

public void exibir(String tema){
    String filePath = tema+"_Lista.txt";
    File file = new File(filePath);
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setColumnIdentifiers(columnsName);
            
            // get lines from txt file
            Object[] tableLines = br.lines().toArray();
            
            // extratct data from lines
            // set data to jtable model
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);
            }
            int tamanho = tableLines.length;
            lblTamanho.setText(String.valueOf(tamanho));
            lblFaltam.setText("Faltam:");
        } catch (Exception ex) {
            
        }
}

public void limpar(){
       jTable1.setModel(new DefaultTableModel(null,new String[]{"Nome"}));
       lblTamanho.setText("");
       lblFaltam.setText("");
}

public void excluir(String nome, String tema){
    try{
        File fileOriginal = new File(tema+"_Lista.txt");
        File fileTemporaria = new File("teste2.txt");

        BufferedReader reader = new BufferedReader(new FileReader(fileOriginal));
        BufferedWriter writer = new BufferedWriter(new FileWriter(fileTemporaria));

        String removerLinha = (nome);
        String atualLinha;
        while((atualLinha = reader.readLine()) != null) {
            // trim newline when comparing with lineToRemove
            String trimmedLine = atualLinha.trim();
            if(trimmedLine.equals(removerLinha)) continue;
            writer.write(atualLinha + System.getProperty("line.separator"));
        }

        writer.close(); 
        reader.close();
        boolean rodando = true;
        System.gc(); 
        while(rodando){
            Path source = Paths.get(fileOriginal .getAbsolutePath());
                try {
                    Files.delete(source); // tenta deletar
                    rodando = false;  // se deletar, sai do laço
                }catch (IOException ex){
                    //se não deletar por causa do processo, cai no catch.
                    //mas continua tentando devido ao laço
                    if(ex.toString().contains("java.nio.file.NoSuchFileException")){
                        rodando = false; //somente se a exceção for de arquivo inexistente é que ele sai
                                        //pois finalmente o arquivo foi deletado.
                    }
                }
            }// Fim do While
                
               Path ondeEsta = Paths.get(fileTemporaria.getAbsolutePath());
               Files.move( ondeEsta,ondeEsta.resolveSibling(tema+"_Lista.txt"));
    }catch(IOException ex){
                JOptionPane.showMessageDialog(null, "ERRO DA MIZERA" + ex);
            }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbTema;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lblFaltam;
    private javax.swing.JLabel lblTamanho;
    private javax.swing.JTextField txtLink;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}

